OBJS = parser.cmo scanner.cmo semantics.cmo format.cmo main.cmo

bild : $(OBJS)
	ocamlc -o bild $(OBJS)

.PHONY : test
test : bild test.sh
	./test.sh

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc -v parser.mly

%.cmo : %.ml
	ocamlc -c $<

%.cmi : %.mli
	ocamlc -c $<

.PHONY : clean
clean :
	rm -f bild parser.ml parser.mli scanner.ml tests.log \
	*.cmo *.cmi *.out *.cmx *.diff *.exe tests/failures/*.out \
	tests/failures/*.diff Program.java *.class \
	parser.output \
	bild_lib/*.class

# Generated by ocamldep *.ml *.mli
bild.cmo: scanner.cmo parser.cmi ast.cmi sast.cmi semantics.cmo fast.cmi format.cmo
bild.cmx:  scanner.cmx parser.cmx semantics.cmx format.cmx sast.cmi ast.cmi fast.cmi
parser.cmo: ast.cmi parser.cmi
parser.cmx: ast.cmi parser.cmi
scanner.cmo: parser.cmi
scanner.cmx: parser.cmx
semantics.cmo: sast.cmi
format.cmo: fast.cmi
parser.cmi: ast.cmi
